/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <array>
#include <cstddef>
#include <thrift/lib/cpp/Thrift.h>

#include "thrift/lib/thrift/gen-cpp2/RpcMetadata_types.h"

namespace apache { namespace thrift {

struct _ProtocolIdEnumDataStorage {
  using type = ProtocolId;
  static constexpr const std::size_t size = 3;
  static constexpr const std::array<ProtocolId, 3> values = {{
    ProtocolId::BINARY,
    ProtocolId::COMPACT,
    ProtocolId::FROZEN2,
  }};
  static constexpr const std::array<folly::StringPiece, 3> names = {{
    "BINARY",
    "COMPACT",
    "FROZEN2",
  }};
};

}} // apache::thrift
namespace apache { namespace thrift {

template <> struct TEnumDataStorage< ::apache::thrift::ProtocolId> {
  using storage_type =  ::apache::thrift::_ProtocolIdEnumDataStorage;
};

}} // apache::thrift
namespace apache { namespace thrift {

struct _RpcKindEnumDataStorage {
  using type = RpcKind;
  static constexpr const std::size_t size = 6;
  static constexpr const std::array<RpcKind, 6> values = {{
    RpcKind::SINGLE_REQUEST_SINGLE_RESPONSE,
    RpcKind::SINGLE_REQUEST_NO_RESPONSE,
    RpcKind::STREAMING_REQUEST_SINGLE_RESPONSE,
    RpcKind::STREAMING_REQUEST_NO_RESPONSE,
    RpcKind::SINGLE_REQUEST_STREAMING_RESPONSE,
    RpcKind::STREAMING_REQUEST_STREAMING_RESPONSE,
  }};
  static constexpr const std::array<folly::StringPiece, 6> names = {{
    "SINGLE_REQUEST_SINGLE_RESPONSE",
    "SINGLE_REQUEST_NO_RESPONSE",
    "STREAMING_REQUEST_SINGLE_RESPONSE",
    "STREAMING_REQUEST_NO_RESPONSE",
    "SINGLE_REQUEST_STREAMING_RESPONSE",
    "STREAMING_REQUEST_STREAMING_RESPONSE",
  }};
};

}} // apache::thrift
namespace apache { namespace thrift {

template <> struct TEnumDataStorage< ::apache::thrift::RpcKind> {
  using storage_type =  ::apache::thrift::_RpcKindEnumDataStorage;
};

}} // apache::thrift
namespace apache { namespace thrift {

struct _RpcPriorityEnumDataStorage {
  using type = RpcPriority;
  static constexpr const std::size_t size = 6;
  static constexpr const std::array<RpcPriority, 6> values = {{
    RpcPriority::HIGH_IMPORTANT,
    RpcPriority::HIGH,
    RpcPriority::IMPORTANT,
    RpcPriority::NORMAL,
    RpcPriority::BEST_EFFORT,
    RpcPriority::N_PRIORITIES,
  }};
  static constexpr const std::array<folly::StringPiece, 6> names = {{
    "HIGH_IMPORTANT",
    "HIGH",
    "IMPORTANT",
    "NORMAL",
    "BEST_EFFORT",
    "N_PRIORITIES",
  }};
};

}} // apache::thrift
namespace apache { namespace thrift {

template <> struct TEnumDataStorage< ::apache::thrift::RpcPriority> {
  using storage_type =  ::apache::thrift::_RpcPriorityEnumDataStorage;
};

}} // apache::thrift

